Description: CD12352 - Infrastructure as Code Project - Udagram

Parameters:
  PriSubnetCidr1:
    Description: Enter the CIDR block for private subnet 1
    Type: String
  PriSubnetCidr2:
    Description: Enter the CIDR block for private subnet 2
    Type: String
  #   Default: 10.0.0.0/16
  AZID1:
    Description: Availabity-zone 1
    Type: String
  AZID2:
    Description: Availabity-zone 2
    Type: String
  InstanceType:
    Description: Instance type of EC2
    Type: String
    Default: t2.micro
  NetworkStackName:
    Description: Stack name for importing
    Type: String
    Default: NetworkStack
  LaunchTLName:
    Description: Launch template name
    Type: String
    Default: UdagramStack-launch-template
  KeyPairName:
    Description: Key pair 
    Type: String
    Default: UdagramKeyPair


Resources:
  # --------- S3 bucket
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub udacity-${AWS::AccountId}-bucket-20241106
      Tags:
        - Key: Name
          Value: !Sub udacity-${AWS::AccountId}-bucket-20241106
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  # ----- Key pair
  KeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: !Ref KeyPairName
      KeyType: ed25519
      PublicKeyMaterial: ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKl7LnHegxxeLA+A9hBmq/sZKoPUZp5zWUtxShUzCaTP tungplatin@gmail.com

  #------ EC2 Security Group:
  # EC2SecurityGr:
  #   Type: AWS::EC2::SecurityGroup
  #   Properties:
  #     GroupDescription: For EC2 launch template
  #     GroupName: UdaSG
  #     SecurityGroupEgress: 
  #       CidrIp: String
  #       Description: Outbound of EC2
  #       DestinationPrefixListId: String
  #       DestinationSecurityGroupId: String
  #       FromPort: Integer
  #       IpProtocol: String
  #       ToPort: Integer
  #     SecurityGroupIngress: 
  #       - Ingress
  #     Tags: 
  #       - Tag
  #     VpcId: 
  #       - Fn::ImportValue:
  #           !Sub "${NetworkStackName}-VpcId"

  #----------- EC2 Launch Template
  WebAppLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Ref LaunchTLName
      LaunchTemplateData:
        InstanceType: t2.micro
        ImageId: ami-0866a3c8686eaeeba   # ubuntu image
        KeyName: !Ref KeyPairName
        # SecurityGroupIds:
        #   - # wait
        UserData:
          Fn::Base64: |
            #!/bin/bash
            apt-get update -y
            sudo apt-get install nginx -y
            service nginx start

  ###------- Autoscaling Group
  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    DependsOn: 
      - WebAppLaunchTemplate
    Properties:
      AutoScalingGroupName: AutoScalingGroup
      LaunchTemplate:
        LaunchTemplateId: !Ref WebAppLaunchTemplate
        Version: !GetAtt WebAppLaunchTemplate.LatestVersionNumber
      DesiredCapacity: 2
      DesiredCapacityType: units
      VPCZoneIdentifier:
        - Fn::ImportValue:
            !Sub "${NetworkStackName}-PrivateSubnets"
      MaxSize: 4
      MinSize: 2
